/*
* 目标：
*   1. 理解双for循环数组去重算法思路
*   2. 理解数组塌陷
* */
/*
* 双for循环去重思路：
*   1. 遍历数组，把数组中的每一项都取出来（不包含最后一项的，因为最后一项后面没有项了）
*   2. 用取出来的这一项和其后面的所有项比较一遍
*   3. 如果后面的项和取出的项相同就证明重复了，重复了就把后面的一项从原数组中删除掉
* */

var ary = [1, 3, 3, 3, 5, 4];

function unique(arr) {
  // 1. 用for循环遍历数组，把每一项取出来（不含最后一项）
  for (var i = 0; i < arr.length - 1; i++) {
    var item = arr[i]; // item就是数组中的每一项

    // 2. 用另一个for循环，实现用当前项和后面所有项比较
    for (var j = i + 1; j < arr.length; j++) {
      // 3. 判断当前项item和后面项arr[j] 是否相同，如果相同，删之
      if (item === arr[j]) {
        arr.splice(j, 1); // 这样直接删除会引起数组塌陷。因为删除数组的某一项后，这一项后面的所有项的索引都会减小1，此时如果j++，就会跳过被删除项紧邻的后面一项。所以此时我们先j--，然后j++ 相当于没加每减，
        j--;
      }
    }
  }

  return arr;
}

var result = unique(ary);
console.log(result);



