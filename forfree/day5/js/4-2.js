/*
* 1. 普通对象VS数组对象：普通对象是无序的键值对集合，数组是有序的。而且数组的键都是数字，而且都是浏览器分配的，数组还有一个length属性，表示数组项的个数。数组最后一项的索引是length - 1
*   对象操作
*   1.1 获取对象的某个属性值：对象.属性名 或者 对象['属性名']，如果属性名是数字只能用[] 。而且 [] 还可以识别变量
*   1.2 修改或新增 都过赋值的方式。因为对象的键具有唯一性，所以赋值的时候如果这个键之前就存在就是修改，不存在就是新增。
*   1.3 软删除 将属性值设置为null；彻底删除：delete 对象.属性名 或者 delete 对象['属性名']
*
* 2. 基本数据类型和引用数据类型的区别：基本数据类型就是值类型的操作，变量就代表的是值本身。引用数据类型的堆内存空间地址的操作，变量不是代表这个引用数据类型的值本身，而是代表这个值存储的堆内存空间地址。
*
* 3. 布尔值、布尔运算：布尔值true和false。布尔运算就是判断真假的。
*   其他数据类型转布尔值：除了 0 NaN '' null undefined 是false，其余的都是true
*   ! 取反运算符，取反运算符发现要取反的值不是布尔值，先把这个值转成布尔值，再取反。
*     ![] == false;   Boolean([]) -> true -> !true -> false
*
*   !! 取反再取反，等效于把这个值转成布尔值
*
*
* 4. 判断语句
*  if -else-if-else
*  三元表达式： 条件 ? 成立的表达式 : 不成立的时候的表达式; (undefined null void 0)
*  switch - case：
*   中的比较时 === 的比较，
*   每个case后面要写break；
*   default代表的是以上情况都不成立时执行的代码
*
*
* 5. null和undefined的区别：
*   1. null和undefined是两种数据类型
*   2. typeof null -> "object"; typeof undefined -> undefined
*   3. Number(null) -> 0, Number(undefined) -> NaN
*   4. document.getElementById() 获取不到时就是null
*   5. 访问对象或者不存在的键的时候返回undefined
*
* */
var num = 10;
if (num) {
  // 浏览器会对 条件进行布尔运算 ，如果是true就会执行条件，false就不执行
}

// 三元表达式是有返回值的