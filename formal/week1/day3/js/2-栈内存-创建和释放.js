// 栈内存（作用域）：供js代码执行的环境，也是用来保存基本数据类型的

// 堆内存的创建：
// 当浏览器打开时，首先会开辟形成一个顶层的栈内存，就是全局作用域；
// 函数执行时，也会开辟一个供函数代码执行的栈内存（私有作用域）

function add(a, b) {
	var total = 0;
	total = a + b;
	return total;
}

// 函数每一次执行，都会形成一个全新的栈内存，即每次函数执行都是在一个全新的环境里面执行，所以函数每次执行都是互相独立的；
add(1, 2);
add(1, 3);
add(1, 2);

function fe() {
	return {
		zf: 'zhufeng'
	}
}
var o1 = fe(); //
var o2 = fe();
console.log(o1 === o2); // false fe执行几次，救护创建几个对象，所以o1和o2是两个不同的堆内存，没有任何关系。

// 栈内存销毁：
// 全局栈内存：当页面关闭时才会销毁
// 函数的私有作用域：一般函数执行完成后，栈内存自动销毁。但是有一些特殊情况需要注意；